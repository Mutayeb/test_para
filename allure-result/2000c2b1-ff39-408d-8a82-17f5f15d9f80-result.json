{"name": "test_addition[20-30-60-chrome]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 60, but got 50\nassert 50 == 60", "trace": "browser = 'chrome', num1 = 20, num2 = 30, expected_value = 60\n\n    @pytest.mark.parametrize(\"browser\", [\"chrome\", \"firefox\"])\n    @pytest.mark.parametrize(\"num1,num2,expected_value\",\n                            [(10,10,20),\n                                (20,30,60),\n                                (30,40,70)])\n    @allure.feature(\"Addition functionality\")\n    @allure.severity(\"p1\")\n    def test_addition(browser, num1, num2, expected_value):\n        if browser == \"chrome\":\n            driver = webdriver.Chrome(service=Service())\n        elif browser == \"firefox\":\n            driver = webdriver.Firefox(service=Service())\n        else:\n            raise ValueError(\"Unsupported browser\")\n    \n        driver.get(\"https://lambdatest.com/selenium-playground/simple-form-demo\")\n        #  10)\n        driver.maximize_window()\n        driver.implicitly_wait(5)\n    \n    \n    \n        # wait = WebDriverWait(driver,   10)\n        # wait.until(EC.presence_of_element_located(By.XPATH, \"//input[@placeholder='Please enter first value']\"))\n        # num1_input=driver.find_element(By.XPATH, \"//input[@placeholder='Please enter first value']\")\n        num1_input = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Please enter first value']\")))\n        num1_input.send_keys(num1)\n        num2_input=WebDriverWait(driver,10).until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Please enter second value']\")))\n        num2_input.send_keys(num2)\n    \n        # Assuming there is a button to add the numbers\n        sum_btn=driver.find_element(By.XPATH,\"//button[text()='Get Sum']\")\n        sum_btn.click()\n    \n        result = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, 'addmessage')))\n    \n    \n        # Example operation, replace with actual logic\n        result = num1 + num2\n>       assert result == expected_value, f\"Expected {expected_value}, but got {result}\"\nE       AssertionError: Expected 60, but got 50\nE       assert 50 == 60\n\nparametr_2.py:48: AssertionError"}, "parameters": [{"name": "num1", "value": "20"}, {"name": "num2", "value": "30"}, {"name": "expected_value", "value": "60"}, {"name": "browser", "value": "'chrome'"}], "start": 1751799207809, "stop": 1751799212941, "uuid": "034b0171-8d2c-4e4e-8900-46fb5e7ea518", "historyId": "06eff11e1450332baee3ecad60c54e1d", "testCaseId": "1433cc97dcd58ab93e1da97080a75aa7", "fullName": "parametr_2#test_addition", "labels": [{"name": "feature", "value": "Addition functionality"}, {"name": "severity", "value": "p1"}, {"name": "suite", "value": "parametr_2"}, {"name": "host", "value": "Dell15"}, {"name": "thread", "value": "6600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "parametr_2"}]}